@{
    ViewData["Title"] = "Upload Video";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">
            <i class="bi bi-cloud-upload"></i> Upload Video
        </h2>
        <a class="btn btn-outline-secondary" href="@Url.Action("Index","Videos")">
            <i class="bi bi-arrow-left"></i> Back to Library
        </a>
    </div>

    <div class="card shadow-sm border-0">
        <div class="card-body">
            <form asp-action="Upload" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label class="form-label" for="title">Title</label>
                    <input type="text" name="title" id="title" class="form-control" placeholder="Enter video title" required />
                    <div class="invalid-feedback">Please enter a title for your video.</div>
                    <span class="text-danger">@Html.ValidationMessage("title")</span>
                </div>

                <div class="mb-3">
                    <label class="form-label" for="file">Select Video File</label>
                    <input type="file" name="file" id="file" class="form-control" accept="video/mp4,video/*" required />
                    <div class="form-text">Supported formats: MP4 (recommended)</div>
                    <div class="invalid-feedback">Please upload a video file.</div>
                    <span class="text-danger">@Html.ValidationMessage("file")</span>
                </div>

                @Html.AntiForgeryToken()

                <div class="d-flex justify-content-start">
                    <button type="submit" class="btn btn-success me-2">
                        <i class="bi bi-upload"></i> Upload
                    </button>
                    <a class="btn btn-secondary" href="@Url.Action("Index","Videos")">
                        <i class="bi bi-x-circle"></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    (() => {
        'use strict';
        const forms = document.querySelectorAll('.needs-validation');
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>
